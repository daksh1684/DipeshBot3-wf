name: Hakalle

on:
  push:
    branches: [stag]
  workflow_dispatch:
    schedule:
    - cron: "0 */6 * * *"

env:
  TZ: America/Recife

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 525600

    steps:
      - name: Checkouts
        uses: actions/checkout@master

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: Create swap (Avoid mk2fs issues)
        run: |
          sudo dd if=/dev/zero of=swap bs=4k count=1048576
          sudo chmod 0600 swap
          sudo mkswap swap
          sudo swapon swap

      - name: Setup git Environment
        run: |
          git config --global user.name "daksh1684"
          git config --global user.email "dipesh199976@gmail.com"
          git config --global pull.rebase false
          git config --global credential.helper store
          echo "https://daksh1684:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

      - name: Install tools/packages
        continue-on-error: true
        timeout-minutes: 5
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python libssl-dev flex bison aria2 unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller liblzma-dev brotli liblz4-tool axel gawk aria2 rename build-essential simg2img aria2 python3-pip tree
          
      - name: Java - Drop OpenJDK prebuilts
        run: |
          rm -rf /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
          sudo apt-get purge --purge openjdk* -y

      - name: Download GraalVM JDK 17
        run: |
          cd /usr; sudo mkdir -p oracle/java/ && cd oracle/java/
          sudo wget 'https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.0.0.2/graalvm-ce-java17-linux-amd64-22.0.0.2.tar.gz' -O graalvm-jdk17.tar.gz >> /dev/null 2>&1
          sudo tar -xzvf graalvm-jdk17.tar.gz >> /dev/null 2>&1 && sudo rm -f graalvm-jdk16.tar.gz
          export JAVA_HOME=/usr/oracle/java/graalvm-ce-java17-22.0.0.2
          export PATH=$PATH:$JAVA_HOME/bin
      
      - name: Set GraalVM as default JDK/JRE
        run: |
          sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/oracle/java/graalvm-ce-java17-22.0.0.2/bin/javac" 1
          sudo update-alternatives --install "/usr/bin/java" "java" "/usr/oracle/java/graalvm-ce-java17-22.0.0.2/bin/java" 1
          sudo update-alternatives --install "/usr/bin/gu" "gu" "/usr/oracle/java/graalvm-ce-java17-22.0.0.2/bin/gu" 1
      
      - name: Clone, compile & config Hakalle
        env:
          JAVA_HOME: /usr/oracle/java/graalvm-ce-java17-22.0.0.2
        run: |
          git clone https://github.com/Hakalle/Haka Haka
          cd Haka && ./gradlew shadowJar
          touch hakalle.yaml
          echo "token: ${{ secrets.BOT_TOKEN }}" >> hakalle.yaml
          echo "username: reflection_gsibot" >> hakalle.yaml
          echo "creatorId: 5080501897" >> hakalle.yaml
          echo "sfProject: dp014875" >> hakalle.yaml
          echo "sfUsername: dp014875" >> hakalle.yaml
          echo "sfPassword: ${{ secrets.SF_PASS }}" >> hakalle.yaml
          echo "privateChatId: -1001657261845" >> hakalle.yaml
          echo "publicChatId: -1001657261845" >> hakalle.yaml
          echo "channelId: -1001616595070" >> hakalle.yaml
          echo "channel: 1616595070" >> hakalle.yaml

      - name: Install OpenJDK 8 for ROM Resigning and setup our tool
        continue-on-error: true
        timeout-minutes: 6
        run: |
          sudo apt install openjdk-8-jdk -y >> /dev/null 2>&1
          cd Haka
          git clone https://github.com/DipeshGSI-private/dpgsi --depth 1 ErfanGSIs
          pip3 install wheel setuptools
          pip3 install backports.lzma docopt zstandard bsdiff4 protobuf pycrypto
          sudo pip3 install --upgrade protobuf
          
      - name: Run the Hakalle
        continue-on-error: true
        run: cd Haka && sudo /usr/oracle/java/graalvm-ce-java17-22.0.0.2/bin/java -jar hakalle/build/libs/*.jar
